# Does not include IPP and CUDA toolkit which are commercial or binary
# ./bin/pip install numpy sphinx

[buildout]

extensions =
    buildout.dumppickedversions
    mr.developer

parts =
    cmake
    tbb
#    qt
    opencv
    cvpy

develop =

eggs =
    sphinx
    numpy

versions = versions

sources = sources

auto-checkout = *

[cmake]
recipe = hexagonit.recipe.cmmi
url = http://www.cmake.org/files/v2.8/cmake-2.8.7.tar.gz

[tbb]
#TBB is optional
recipe = hexagonit.recipe.cmmi
url = http://threadingbuildingblocks.org/uploads/77/182/4.0%20update%203/tbb40_20120201oss_src.tgz
configure-command = make
# see build instructions included in tbb, for possible make targets and parameters
make-targets = tbb tbbmalloc

#[qt]
#recipe = hexagonit.recipe.cmmi
#url = http://get.qt.nokia.com/qt/source/qt-everywhere-opensource-src-4.8.0.tar.gz

[opencv]
recipe = hexagonit.recipe.cmmi
url = http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.3.1/OpenCV-2.3.1a.tar.bz2/download
configure-command = ${buildout:directory}/parts/cmake/bin/cmake              \
                    -D CMAKE_BUILD_TYPE=RELEASE                              \
                    -D CMAKE_INSTALL_PREFIX=${buildout:directory}/parts/opencv/release  \
                    -D WITH_TBB=ON                                            \
                    -D TBB_INCLUDE_DIR=${buildout:directory}/parts/tbb       \
                    -D PYTHON_EXECUTABLE=${buildout:directory}/bin/python .

[cvpy]
recipe = zc.recipe.egg
eggs =
#    pyopencv
    ipython
    ${buildout:eggs}
scripts = ipython=cvpy

[versions]


[sources]
