# Does not include the optional IPP, Qt and CUDA toolkit. Experimenting with TBB.

[buildout]

extensions =
    buildout.dumppickedversions
    mr.developer

parts =
    cvpy
    cmake
#    tbb
    opencv
    pyopencv

develop =

eggs =

versions = versions

sources = sources

auto-checkout = *

[cvpy]
recipe = zc.recipe.egg
eggs =
#    pyopencv
    ipython
    numpy
    sphinx
scripts = ipython=cvpy


[cmake]
recipe = hexagonit.recipe.cmmi
url = http://www.cmake.org/files/v2.8/cmake-2.8.7.tar.gz


[tbb]
# TBB is optional
recipe = hexagonit.recipe.cmmi
url = http://threadingbuildingblocks.org/uploads/77/182/4.0%20update%203/tbb40_20120201oss_src.tgz
configure-command = make
# see build instructions included in tbb, for possible make targets and parameters
make-targets = tbb tbbmalloc


[opencv]
recipe = hexagonit.recipe.cmmi
url = http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.3.1/OpenCV-2.3.1a.tar.bz2/download
configure-command = ${buildout:directory}/parts/cmake/bin/cmake              \
                    -D CMAKE_BUILD_TYPE=RELEASE                              \
                    -D CMAKE_INSTALL_PREFIX=${buildout:directory}/parts/opencv/build  \
#                    -D WITH_TBB=ON                                            \
#                    -D TBB_INCLUDE_DIR=${buildout:directory}/parts/tbb        \
                    -D PYTHON_EXECUTABLE=${buildout:directory}/bin/cvpy .


[pyopencv]
recipe = hexagonit.recipe.cmmi
url = http://pyopencv.googlecode.com/files/pyopencv-2.1.0.wr1.2.0.tar.gz
configure-command = ${buildout:directory}/parts/cmake/bin/cmake  -D OpenCV_DIR=${buildout:directory}/parts/opencv/build .


[versions]


[sources]
