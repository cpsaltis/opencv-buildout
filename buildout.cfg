# Does not include the optional IPP, Qt and CUDA toolkit. Experimenting with TBB.
# still need all image/video dependencies
# no need for cmake package, but still needing libboost-python-dev
# to run the interpreter with pyopecncv support do
# LD_LIBRARY_PATH=/home/three/dev/pyopencv-buildout/parts/opencv/build/lib ./bin/cvpy
# and then import pyopencv as cv
# to run the interpreter with the native python bindings copy parts/opencv/build/lib/python/dist-packages/cv.so
# and cv2.so to lib/python2.6/site-packages/ an then import cv/cv2

[buildout]

extensions =
    buildout.dumppickedversions
    mr.developer

parts =
    cvpy
    cmake
#    tbb
    opencv
    pyopencv

develop =

eggs =

versions = versions

sources = sources

auto-checkout = *


[cvpy]
#environment = cvenv
recipe = zc.recipe.egg
eggs =
    ipython
    numpy
    sphinx
scripts = ipython=cvpy
#extra-paths = ${buildout:directory}/parts/opencv/build/lib
#initialization = import os;os.putenv('LD_LIBRARY_PATH','${buildout:directory}/parts/opencv/build/lib')
#rpath = ${buildout:directory}/parts/opencv/build/lib

[cvenv]
LD_LIBRARY_PATH=${buildout:directory}/parts/opencv/build/lib


[cmake]
recipe = hexagonit.recipe.cmmi
url = http://www.cmake.org/files/v2.8/cmake-2.8.7.tar.gz


[tbb]
# TBB is optional
recipe = hexagonit.recipe.cmmi
url = http://threadingbuildingblocks.org/uploads/77/182/4.0%20update%203/tbb40_20120201oss_src.tgz
configure-command = make
# see build instructions included in tbb, for possible make targets and parameters
make-targets = tbb tbbmalloc


[opencv]
recipe = hexagonit.recipe.cmmi
url = http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.1/OpenCV-2.1.0.tar.bz2/download
configure-command = ${buildout:directory}/parts/cmake/bin/cmake                       \
                    -D CMAKE_BUILD_TYPE=RELEASE                                       \
                    -D CMAKE_INSTALL_PREFIX=${buildout:directory}/parts/opencv/build  \
#                    -D WITH_TBB=ON                                                    \
#                    -D TBB_INCLUDE_DIR=${buildout:directory}/parts/tbb                \
                    -D PYTHON_EXECUTABLE=${buildout:directory}/bin/cvpy .

# with default bindings
#[opencv]
#recipe = hexagonit.recipe.cmmi
#url = http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.3/OpenCV-2.3.0.tar.bz2/download
#configure-command = ${buildout:directory}/parts/cmake/bin/cmake                         \
#                    -D CMAKE_BUILD_TYPE=RELEASE                                         \
#                    -D CMAKE_INSTALL_PREFIX=${buildout:directory}/parts/opencv/build    \
#                    -D WITH_TBB=ON                                                      \
#                    -D TBB_INCLUDE_DIR=${buildout:directory}/parts/tbb                  \
#                    -D BUILD_NEW_PYTHON_SUPPORT=ON                                       \
#                    -D PYTHON_EXECUTABLE=${buildout:directory}/bin/cvpy .

[pyopencv]
recipe = hexagonit.recipe.cmmi
url = http://pyopencv.googlecode.com/files/pyopencv-2.1.0.wr1.2.0.tar.gz
configure-command = ${buildout:directory}/parts/cmake/bin/cmake                \
                    -D PYTHON_EXECUTABLE=${buildout:directory}/bin/cvpy        \
                    -D OpenCV_DIR=${buildout:directory}/parts/opencv/build/share/opencv .


[versions]


[sources]
